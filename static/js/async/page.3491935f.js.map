{"version":3,"file":"static/js/async/page.3491935f.js","mappings":"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","sources":["webpack://bill-reconciliation/./src/types/index.ts","webpack://bill-reconciliation/./src/utils/file.ts","webpack://bill-reconciliation/./src/utils/idle.ts","webpack://bill-reconciliation/./src/parser/qianji.ts","webpack://bill-reconciliation/./src/parser/bank-cgb.ts","webpack://bill-reconciliation/./src/parser/index.ts","webpack://bill-reconciliation/./src/utils/arr.ts","webpack://bill-reconciliation/./src/constant.ts","webpack://bill-reconciliation/./src/utils/diff.ts","webpack://bill-reconciliation/./src/routes/store.ts","webpack://bill-reconciliation/./src/routes/sections/bill.tsx","webpack://bill-reconciliation/./src/routes/sections/record.tsx","webpack://bill-reconciliation/./src/routes/sections/result.tsx","webpack://bill-reconciliation/./src/routes/page.tsx"],"sourcesContent":["export enum BillType {\n  INCOME, // 收入\n  EXPENSE, // 支出\n  TRANSFER, // 转账\n  BORROW_IN, // 债务-借入\n  BORROW_OUT, // 债务-借出\n  PAYBACK_IN, // 债务-收款\n  PAYBACK_OUT, // 债务-还款\n}\n\nexport interface IBillItem {\n  id: string;\n  type: BillType;\n  money: string;\n  account1: string;\n  account2: string;\n  time: number;\n  category: string;\n  remark: string;\n}\n\nexport interface IRecordItem {\n  id: string;\n  account: string;\n  type: BillType;\n  time: number;\n  money: string;\n  remark: string;\n}\n\nexport interface IBillAppConfig {\n  key: string;\n  name: string;\n  picker: () => Promise<File>;\n  parser: (file: File) => Promise<IBillItem[]>;\n}\n\nexport interface IRecordAppConfig {\n  key: string;\n  name: string;\n  picker: () => Promise<File>;\n  parser: (file: File, account: string) => Promise<IRecordItem[]>;\n}\n","export function loadFile(formatToFilter: string): Promise<File> {\n  return new Promise(resolve => {\n    const fileInput = document.createElement('input');\n    fileInput.style.display = 'none';\n    fileInput.type = 'file';\n    fileInput.accept = formatToFilter || '.json';\n    // @ts-expect-error\n    fileInput.acceptCharset = 'utf8';\n\n    document.body.appendChild(fileInput);\n\n    function changeHandler() {\n      if (fileInput.files && fileInput.files.length > 0) {\n        fileInput.removeEventListener('change', changeHandler);\n        setTimeout(() => fileInput.remove(), 500);\n        resolve(fileInput.files[0]);\n      }\n    }\n\n    fileInput.addEventListener('change', changeHandler);\n    fileInput.click();\n  });\n}\n\nexport function readFileText(file: File, encoding = 'UTF-8'): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const fReader = new FileReader();\n    fReader.onerror = err => reject(err);\n    fReader.onloadend = event => {\n      const result = event.target!.result as string;\n      resolve(result || '');\n    };\n    fReader.readAsText(file, encoding);\n  });\n}\n","export class Idle {\n  private last: number = 0;\n\n  constructor() {\n    this.last = performance.now();\n  }\n\n  shouldIdle() {\n    return performance.now() - this.last > 16;\n  }\n\n  sleep(): Promise<void> {\n    return new Promise(resolve => {\n      if (typeof requestAnimationFrame !== 'undefined') {\n        requestAnimationFrame(() => {\n          resolve();\n          this.last = performance.now();\n        });\n      } else {\n        setTimeout(() => {\n          resolve();\n          this.last = performance.now();\n        }, 1);\n      }\n    });\n  }\n}\n","import dayjs from 'dayjs';\nimport { BillType, IBillAppConfig, IBillItem } from '@/types';\nimport { loadFile, readFileText } from '@/utils/file';\nimport { Idle } from '@/utils/idle';\n\nexport const importQianJiFile = () => loadFile('csv');\n\nconst typeMap: Record<string, BillType> = {\n  收入: BillType.INCOME,\n  支出: BillType.EXPENSE,\n  转账: BillType.TRANSFER,\n  还款: BillType.TRANSFER,\n  '债务-借入': BillType.BORROW_IN,\n  '债务-借出': BillType.BORROW_OUT,\n  '债务-收款': BillType.PAYBACK_IN,\n  '债务-还款': BillType.PAYBACK_OUT,\n};\n\nconst QianJi: IBillAppConfig = {\n  key: 'qianji',\n  name: '钱迹',\n  picker: () => loadFile('csv'),\n  parser: async file => {\n    const idle = new Idle();\n    const content = (await readFileText(file)).trim().split('\\n');\n    await idle.sleep();\n\n    // 首行\n    const firstLine = content[0].split(',');\n    // 找到对应的几个下标\n    const findIndex = (name: string) => {\n      const index = firstLine.indexOf(name);\n      if (index === -1) {\n        throw new Error(`未找到 ${name} 列，请检查数据`);\n      }\n      return index;\n    };\n    const idIndex = findIndex('DataId');\n    const typeIndex = findIndex('类型');\n    const moneyIndex = findIndex('金额');\n    const account1Index = findIndex('账户1');\n    const account2Index = findIndex('账户2');\n    const timeIndex = findIndex('时间');\n    const categoryIndex = findIndex('分类');\n    const remarkIndex = findIndex('备注');\n\n    const result: IBillItem[] = [];\n\n    for (let i = 1; i < content.length; i++) {\n      if (idle.shouldIdle()) {\n        await idle.sleep();\n      }\n      const line = content[i].split(',');\n      result.push({\n        id: line[idIndex],\n        type: typeMap[line[typeIndex]],\n        money: line[moneyIndex],\n        account1: line[account1Index],\n        account2: line[account2Index],\n        time: dayjs(line[timeIndex]).unix(),\n        category: line[categoryIndex],\n        remark: line[remarkIndex],\n      });\n    }\n\n    // 基于日期从大到小进行排序\n    return result.sort((a, b) => b.time - a.time);\n  },\n};\n\nexport default QianJi;\n","import dayjs from 'dayjs';\nimport { nanoid } from 'nanoid';\nimport { BillType, IRecordAppConfig, IRecordItem } from '@/types';\nimport { loadFile, readFileText } from '@/utils/file';\nimport { Idle } from '@/utils/idle';\n\nconst BankCGB: IRecordAppConfig = {\n  key: 'bang-cgb',\n  name: '广发银行',\n  picker: () => loadFile('csv'),\n  parser: async (file, account) => {\n    const idle = new Idle();\n    const content = (await readFileText(file, 'GB2312')).trim().split('\\n');\n    await idle.sleep();\n\n    // 首行\n    const firstLine = content[0].split(',');\n    // 找到对应的几个下标\n    const findIndex = (name: string) => {\n      const index = firstLine.indexOf(name);\n      if (index === -1) {\n        throw new Error(`未找到 ${name} 列，请检查数据`);\n      }\n      return index;\n    };\n    const moneyIndex = findIndex('入账金额');\n    const timeIndex = findIndex('交易日');\n    const remarkIndex = findIndex('交易摘要');\n\n    const result: IRecordItem[] = [];\n\n    for (let i = 1; i < content.length; i++) {\n      if (idle.shouldIdle()) {\n        await idle.sleep();\n      }\n      const line = content[i].split(',');\n      const money = Number(line[moneyIndex].trim());\n\n      result.push({\n        id: `cgb-${line[timeIndex].trim()}-${nanoid()}`,\n        account,\n        type: money > 0 ? BillType.EXPENSE : BillType.INCOME,\n        money: line[moneyIndex]\n          .trim()\n          .replace(/^-/, '')\n          .replace('（待入账）', ''),\n        time: dayjs(line[timeIndex].trim()).unix(),\n        remark: line[remarkIndex].trim(),\n      });\n    }\n\n    // 基于日期从大到小进行排序\n    return result.sort((a, b) => b.time - a.time);\n  },\n};\n\nexport default BankCGB;\n","import QianJi from './qianji';\nimport BankCGB from './bank-cgb';\n\nexport const billApps = [QianJi];\nexport const recordApps = [BankCGB];\n","export function findBreakPoint<T>(\n  arr: Array<T>,\n  check: (value: T) => boolean,\n  index = 0,\n) {\n  for (let i = index; i < arr.length && i >= 0; i++) {\n    if (check(arr[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\n","import { BillType } from './types';\n\nexport const BillTypeName: Record<BillType, string> = {\n  [BillType.INCOME]: '收入',\n  [BillType.EXPENSE]: '支出',\n  [BillType.TRANSFER]: '转账/还款',\n  [BillType.BORROW_IN]: '债务-借入',\n  [BillType.BORROW_OUT]: '债务-借出',\n  [BillType.PAYBACK_IN]: '债务-收款',\n  [BillType.PAYBACK_OUT]: '债务-还款',\n};\n","import { Idle } from './idle';\nimport { findBreakPoint } from './arr';\nimport { BillType, IBillItem, IRecordItem } from '@/types';\nimport { BillTypeName } from '@/constant';\n\ninterface IBillDiffResult {\n  id: string;\n  score: number;\n  time: number;\n  bill?: IRecordItem;\n  record?: IRecordItem;\n}\n\nconst MONEY_WEIGHT = 5;\nconst TIME_WEIGHT = 1;\nconst MAX_SCORE = 10000;\n\n/**\n * diff 前的数据预处理\n * 做了两件事：\n * 1. 根据accountName，筛选出相关的记录\n * 2. 将记录转为IRecordItem的格式\n */\nexport async function prepareBillRecord(\n  accountNames: string[],\n  bill: IBillItem[],\n) {\n  const result: IRecordItem[] = [];\n  const idle = new Idle();\n\n  for (let i = 0; i < bill.length; i++) {\n    if (idle.shouldIdle()) {\n      await idle.sleep();\n    }\n    const item = bill[i];\n    let accountName = '';\n    if (accountNames.includes(item.account1)) {\n      accountName = item.account1;\n    }\n    if (accountNames.includes(item.account2)) {\n      accountName = item.account2;\n    }\n    if (!accountName) {\n      continue;\n    }\n    if (item.type === BillType.INCOME || item.type === BillType.EXPENSE) {\n      // 这两个只有单个账户，可以直接原样记录\n      result.push({\n        id: item.id,\n        account: accountName,\n        type: item.type,\n        time: item.time,\n        money: item.money,\n        remark: `${item.category}-${item.remark}`,\n      });\n      continue;\n    }\n    // 涉及两个账户的，第一个是支出，第二个是收入\n    result.push({\n      id: item.id,\n      type: item.account1 === accountName ? BillType.EXPENSE : BillType.INCOME,\n      account: accountName,\n      time: item.time,\n      money: item.money,\n      remark: `${BillTypeName[item.type]}-${item.category}-${item.remark}`,\n    });\n  }\n\n  return result;\n}\n\nexport function calcScore(bill: IRecordItem, record: IRecordItem) {\n  if (bill.type !== record.type) {\n    return Number.MAX_SAFE_INTEGER;\n  }\n  const moneyScore =\n    Math.abs(Number(bill.money) - Number(record.money)) * MONEY_WEIGHT;\n  const timeScore = Math.abs(bill.time - record.time) * TIME_WEIGHT;\n  if (Number.isNaN(moneyScore) || Number.isNaN(timeScore)) {\n    return Number.MAX_SAFE_INTEGER;\n  }\n  const result = moneyScore + timeScore;\n  if (result > Number.MAX_SAFE_INTEGER) {\n    return Number.MAX_SAFE_INTEGER;\n  }\n  return result;\n}\n\nconst TWO_DAY_SECONDS = 172800;\n// 对两个数据进行 diff，产生新的数据\nexport async function billDiff(\n  bill: IRecordItem[],\n  record: IRecordItem[],\n): Promise<IBillDiffResult[]> {\n  const idle = new Idle();\n  const isBillLarge = bill.length > record.length;\n  const largeRecord = isBillLarge ? bill : record;\n  const smallRecord = isBillLarge ? record : bill;\n\n  if (largeRecord.length === 0 || smallRecord.length === 0) {\n    throw new Error('数据不可为空');\n  }\n\n  const result: IBillDiffResult[] = [];\n\n  const matchedLargeRecord = new Set<IRecordItem>();\n\n  // 从小的开始查找，优先找到匹配度最高的\n  const largeRange = {\n    start: 0,\n    end: 0,\n  };\n  for (let i = 0; i < smallRecord.length; i++) {\n    if (idle.shouldIdle()) {\n      await idle.sleep();\n    }\n    const smallRec = smallRecord[i];\n    // 只在最近两天的数据里查找\n    largeRange.start = findBreakPoint(\n      largeRecord,\n      v => smallRec.time < TWO_DAY_SECONDS + v.time,\n      largeRange.start,\n    );\n    largeRange.end = findBreakPoint(\n      largeRecord,\n      v => v.time < smallRec.time - TWO_DAY_SECONDS,\n      Math.max(largeRange.start, largeRange.end),\n    );\n    // 找到得分最小的几个\n    const recordScores = new Array(largeRange.end - largeRange.start + 1)\n      .fill(null)\n      .map((_, index) => {\n        const rec = largeRecord[largeRange.start + index];\n        // 金额完全相同，且时间差异在2m以内，可以当做完全相同\n        const fullMatch =\n          Number(rec.money) === Number(smallRec.money) &&\n          Math.abs(rec.time - smallRec.time) <= 120;\n        return {\n          score: calcScore(rec, smallRec),\n          fullMatch,\n          record: rec,\n        };\n      })\n      .sort((a, b) => {\n        if (a.fullMatch !== b.fullMatch) {\n          return a.fullMatch ? -1 : 1;\n        }\n        return a.score - b.score;\n      });\n    const firstScore = recordScores[0];\n    // 如果分数太大，说明差太多了，就不要了\n    if (firstScore && firstScore.score <= MAX_SCORE) {\n      matchedLargeRecord.add(firstScore.record);\n      result.push({\n        id: `${firstScore.record.id}_${smallRec.id}`,\n        score: firstScore.score,\n        time: firstScore.record.time,\n        [isBillLarge ? 'bill' : 'record']: firstScore.record,\n        [isBillLarge ? 'record' : 'bill']: smallRec,\n      });\n    } else {\n      // 没有匹配结果\n      result.push({\n        id: `~NONE~_${smallRec.id}`,\n        score: Number.MAX_SAFE_INTEGER,\n        time: smallRec.time,\n        [isBillLarge ? 'record' : 'bill']: smallRec,\n      });\n    }\n  }\n\n  // 把剩下的数据加回去\n  for (const it of largeRecord) {\n    if (idle.shouldIdle()) {\n      await idle.sleep();\n    }\n    if (!matchedLargeRecord.has(it)) {\n      matchedLargeRecord.add(it);\n      const index = findBreakPoint(result, v => v.time < it.time);\n      result.splice(index, 0, {\n        id: `${it.id}_~NONE~`,\n        score: Number.MAX_SAFE_INTEGER,\n        time: it.time,\n        [isBillLarge ? 'bill' : 'record']: it,\n      });\n    }\n  }\n\n  return result;\n}\n","import { BaseFormProps, FormApi } from '@douyinfe/semi-ui/lib/es/form';\nimport { useRequest } from 'ahooks';\nimport { uniq } from 'lodash-es';\nimport {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Toast } from '@douyinfe/semi-ui';\nimport { IBillAppConfig, IRecordItem } from '@/types';\nimport { recordApps } from '@/parser';\nimport { billDiff, prepareBillRecord } from '@/utils/diff';\n\ninterface FormValue {\n  record: Array<{\n    file: File;\n    type: string;\n    account: string;\n  }>;\n}\n\nexport type RecordStatus = Error | IRecordItem[] | 'loading' | null;\nconst useModel = () => {\n  const formApi = useRef<FormApi>();\n  const onGetFormApi = useCallback(\n    (api: FormApi) => (formApi.current = api),\n    [],\n  );\n\n  const [recordStatus, _setRecordStatus] = useState<Array<RecordStatus>>([]);\n  const setRecordStatus = useCallback((index: number, value: RecordStatus) => {\n    _setRecordStatus(v => {\n      const newValue = [...v];\n      newValue[index] = value;\n      return newValue;\n    });\n  }, []);\n\n  // 解析出来的记账软件账单数据，只有一个文件\n  const {\n    data: billData,\n    loading: loadingBillData,\n    run: parseBillData,\n  } = useRequest((file: File, app: IBillAppConfig) => app.parser(file), {\n    manual: true,\n    onSuccess: () => {\n      const v: FormValue['record'] = formApi.current?.getValue('record');\n      if (Array.isArray(v)) {\n        const newValue: any = {};\n        v.forEach((_, index) => (newValue[`record[${index}].account`] = ''));\n        formApi.current?.setValues(newValue);\n      }\n    },\n  });\n\n  const [account, category] = useMemo(() => {\n    const accRes = new Set<string>();\n    const catRes = new Set<string>();\n    if (billData) {\n      billData.forEach(x => {\n        x.account1 && accRes.add(x.account1);\n        x.account2 && accRes.add(x.account2);\n        x.category && catRes.add(x.category);\n      });\n    }\n    const acc = Array.from(accRes).map(x => ({\n      label: x,\n      value: x,\n    }));\n    const cat = Array.from(catRes).map(x => ({\n      label: x,\n      value: x,\n    }));\n    return [acc, cat];\n  }, [billData]);\n\n  const formOnChange: BaseFormProps['onValueChange'] = useCallback(\n    (values: any, changedValues: any) => {\n      const keys = Object.keys(changedValues)\n        .filter(\n          x =>\n            x.endsWith('.account') ||\n            x.endsWith('.type') ||\n            x.endsWith('.file'),\n        )\n        .map(x => x.match(/record\\[(\\d+)\\]/))\n        .filter(x => Boolean(x))\n        .map(x => Number(x![1]));\n      const changedIndex = uniq(keys);\n      changedIndex.forEach(index => {\n        const { file, account, type } = values.record[index];\n        const parser = recordApps.find(x => x.key === type);\n        if (!file || !account || !type || !parser) {\n          setRecordStatus(index, null);\n          return;\n        }\n        setRecordStatus(index, 'loading');\n        parser\n          .parser(file, account)\n          .then(result => setRecordStatus(index, result))\n          .catch(err => setRecordStatus(index, err as Error));\n      });\n    },\n    [],\n  );\n\n  const {\n    data: diffData,\n    loading: loadingDiffData,\n    run: doDiff,\n  } = useRequest(\n    async () => {\n      console.log('doDiff', billData, recordStatus);\n      if (!billData) {\n        throw new Error('没有记账数据');\n      }\n      const records = recordStatus.filter(\n        x => Array.isArray(x) && x.length > 0,\n      ) as Array<Array<IRecordItem>>;\n      if (!billData || records.length === 0) {\n        throw new Error('没有对比账单');\n      }\n      const accounts = formApi.current\n        ?.getValue('record')\n        .map((x: any) => x.account);\n      const rec = await prepareBillRecord(accounts, billData);\n      console.log('prepareBillRecord', rec);\n      const recordData = records\n        .reduce((a, b) => [...a, ...b], [])\n        .sort((a, b) => b.time - a.time);\n      const res = await billDiff(rec, recordData);\n      console.log('billDiff', res);\n      return res;\n    },\n    {\n      manual: true,\n      onError: e => Toast.error(e.message),\n    },\n  );\n\n  return {\n    onGetFormApi,\n    formOnChange,\n    recordStatus,\n    setRecordStatus,\n    billData,\n    loadingBillData,\n    parseBillData,\n    diffData,\n    loadingDiffData,\n    doDiff,\n    account,\n    category,\n  };\n};\n\nconst Context = createContext<ReturnType<typeof useModel>>({} as any);\n\nconst useStore = () => useContext(Context);\n\nexport { useModel, useStore, Context };\n","import { Button, Card, Space, Spin, Tag } from '@douyinfe/semi-ui';\nimport { useStore } from '../store';\nimport { billApps } from '@/parser';\n\nconst Bill = () => {\n  const { billData, loadingBillData, parseBillData } = useStore();\n  return (\n    <Card\n      title={\n        <Space>\n          <Tag color={billData ? 'green' : 'red'}>\n            {billData ? '已' : '未'}选择\n          </Tag>\n          <span>第一步：选择记账软件</span>\n        </Space>\n      }\n    >\n      <Spin spinning={loadingBillData}>\n        <Space>\n          {billApps.map(x => (\n            <Button\n              key={x.key}\n              onClick={async () => {\n                const f = await x.picker();\n                parseBillData(f, x);\n              }}\n            >\n              {x.name}\n            </Button>\n          ))}\n        </Space>\n      </Spin>\n    </Card>\n  );\n};\n\nexport default Bill;\n","import {\n  ArrayField,\n  Button,\n  Card,\n  Dropdown,\n  Form,\n  Space,\n  Spin,\n  Tag,\n  Tooltip,\n  useFieldApi,\n  useFieldState,\n} from '@douyinfe/semi-ui';\nimport { FC } from 'react';\nimport { RecordStatus, useStore } from '../store';\nimport { recordApps } from '@/parser';\n\ninterface RecordFilePickerProps {\n  field: string;\n}\nconst RecordFilePicker: FC<RecordFilePickerProps> = ({ field }) => {\n  const api = useFieldApi(field);\n  const { value = {} } = useFieldState(field);\n  const { file } = value;\n\n  return (\n    <Dropdown\n      showArrow\n      menu={recordApps.map(x => ({\n        node: 'item',\n        name: x.name,\n        onClick: () => {\n          x.picker()\n            .then(f => {\n              api.setValue({\n                ...(api.getValue() || {}),\n                file: f,\n                type: x.key,\n              });\n            })\n            .catch(() => {\n              // ignore\n            });\n        },\n      }))}\n    >\n      <Button style={{ width: '300px' }}>\n        {file ? `已选择：${(file as File).name}` : '选择文件'}\n      </Button>\n    </Dropdown>\n  );\n};\n\nfunction renderStatus(status: RecordStatus) {\n  if (status === 'loading') {\n    return <Spin />;\n  }\n  if (typeof status === 'object' && status instanceof Error) {\n    return (\n      <Tooltip content={status.message}>\n        <Tag color=\"red\">错误</Tag>\n      </Tooltip>\n    );\n  }\n  if (Array.isArray(status)) {\n    return <Tag color=\"green\">解析成功</Tag>;\n  }\n  return <Tag color=\"grey\">未选择</Tag>;\n}\n\nconst Record = () => {\n  const { recordStatus, onGetFormApi, formOnChange, account } = useStore();\n\n  return (\n    <Card title=\"第二步：选择账单（可多选）\">\n      <Form onValueChange={formOnChange} getFormApi={onGetFormApi}>\n        <ArrayField field=\"record\" initValue={[{}]}>\n          {({ arrayFields, addWithInitValue }) => (\n            <Space vertical align=\"start\" style={{ width: '100%' }}>\n              {arrayFields.map(({ field, key, remove }, index) => (\n                <Space key={key}>\n                  <div style={{ width: '60px' }}>\n                    {renderStatus(recordStatus[index])}\n                  </div>\n                  <RecordFilePicker field={field} />\n                  <Form.Select\n                    style={{ width: '300px' }}\n                    noLabel\n                    field={`${field}.account`}\n                    optionList={account}\n                  />\n                  <Button onClick={remove}>移除</Button>\n                </Space>\n              ))}\n              <Button onClick={() => addWithInitValue({})}>添加更多</Button>\n            </Space>\n          )}\n        </ArrayField>\n      </Form>\n    </Card>\n  );\n};\n\nexport default Record;\n","import { Button, Card, Table } from '@douyinfe/semi-ui';\nimport dayjs from 'dayjs';\nimport { useState } from 'react';\nimport { useStore } from '../store';\nimport { BillTypeName } from '@/constant';\n\nconst Result = () => {\n  const { billData, loadingDiffData, diffData, doDiff } = useStore();\n\n  const [selectedKeys, setSelectedKeys] = useState<string[]>([]);\n\n  return (\n    <Card title=\"查看结果\">\n      <Button onClick={doDiff}>计算结果</Button>\n      <Table\n        className=\"diff-table\"\n        rowKey=\"id\"\n        loading={loadingDiffData}\n        size=\"small\"\n        dataSource={diffData}\n        rowSelection={{\n          selectedRowKeys: selectedKeys,\n          onChange: keys => setSelectedKeys(keys as string[]),\n        }}\n        virtualized\n        columns={[\n          {\n            title: '时间',\n            dataIndex: 'time',\n            render: v => dayjs(v * 1000).format('YYYY-MM-DD HH:mm:ss'),\n          },\n          {\n            title: '记账-类型',\n            dataIndex: 'bill.type',\n            render: (_, rec) => {\n              if (!rec.bill) {\n                return '';\n              }\n              const it = billData?.find(x => x.id === rec.bill!.id);\n              return it ? BillTypeName[it.type] : '';\n            },\n          },\n          {\n            title: '记账-金额',\n            dataIndex: 'bill.money',\n          },\n          {\n            title: '记账-时间',\n            dataIndex: 'bill.time',\n            render: v =>\n              v ? dayjs(v * 1000).format('YYYY-MM-DD HH:mm:ss') : '',\n          },\n          {\n            title: '记账-备注',\n            dataIndex: 'bill.remark',\n          },\n          {\n            title: '账单-类型',\n            dataIndex: 'record.type',\n          },\n          {\n            title: '账单-金额',\n            dataIndex: 'record.money',\n          },\n          {\n            title: '账单-时间',\n            dataIndex: 'record.time',\n            render: v =>\n              v ? dayjs(v * 1000).format('YYYY-MM-DD HH:mm:ss') : '',\n          },\n          {\n            title: '账单-备注',\n            dataIndex: 'record.remark',\n          },\n        ]}\n        pagination={false}\n        onRow={row => {\n          if (!row?.bill) {\n            return {\n              className: 'diff-add',\n            };\n          }\n          if (!row?.record) {\n            return {\n              className: 'diff-remove',\n            };\n          }\n          return {};\n        }}\n      />\n    </Card>\n  );\n};\n\nexport default Result;\n","import './index.css';\nimport Bill from './sections/bill';\nimport Record from './sections/record';\nimport Result from './sections/result';\nimport { Context, useModel } from './store';\n\nconst Index = () => {\n  const model = useModel();\n\n  return (\n    <Context.Provider value={model}>\n      <Bill />\n      <Record />\n      <Result />\n    </Context.Provider>\n  );\n};\n\nexport default Index;\n"],"names":["BillType","loadFile","formatToFilter","Promise","resolve","fileInput","document","createElement","style","display","type","accept","acceptCharset","body","appendChild","addEventListener","changeHandler","files","length","removeEventListener","setTimeout","remove","click","readFileText","file","encoding","reject","fReader","FileReader","onerror","err","onloadend","event","result","target","readAsText","Idle","constructor","_defineProperty","this","last","performance","now","shouldIdle","sleep","requestAnimationFrame","typeMap","收入","INCOME","支出","EXPENSE","转账","TRANSFER","还款","BORROW_IN","BORROW_OUT","PAYBACK_IN","PAYBACK_OUT","QianJi","key","name","picker","parser","_ref","_asyncToGenerator","idle","content","trim","split","firstLine","findIndex","index","indexOf","Error","idIndex","typeIndex","moneyIndex","account1Index","account2Index","timeIndex","categoryIndex","remarkIndex","i","line","push","id","money","account1","account2","time","dayjs","unix","category","remark","sort","a","b","_x","apply","arguments","BankCGB","account","Number","nanoid","replace","_x2","billApps","recordApps","findBreakPoint","arr","check","BillTypeName","MONEY_WEIGHT","TIME_WEIGHT","MAX_SCORE","_prepareBillRecord","accountNames","bill","item","accountName","includes","calcScore","record","MAX_SAFE_INTEGER","moneyScore","Math","abs","timeScore","isNaN","TWO_DAY_SECONDS","_billDiff","isBillLarge","largeRecord","smallRecord","matchedLargeRecord","Set","largeRange","start","end","smallRec","v","max","firstScore","Array","fill","map","_","rec","fullMatch","score","add","it","has","splice","useModel","formApi","useRef","onGetFormApi","useCallback","api","current","recordStatus","_setRecordStatus","useState","setRecordStatus","value","newValue","data","billData","loading","loadingBillData","run","parseBillData","useRequest","app","manual","onSuccess","_formApi$current","getValue","isArray","_formApi$current2","forEach","setValues","useMemo","accRes","catRes","x","from","label","formOnChange","values","changedValues","keys","Object","filter","endsWith","match","Boolean","_uniq","find","then","catch","diffData","loadingDiffData","doDiff","_formApi$current3","console","log","records","accounts","prepareBillRecord","recordData","reduce","res","_x3","_x4","billDiff","onError","e","Toast","error","message","Context","createContext","useStore","useContext","Bill","_jsx","Card","title","_jsxs","Space","children","Tag","color","Spin","spinning","Button","onClick","f","RecordFilePicker","field","useFieldApi","useFieldState","Dropdown","showArrow","menu","node","setValue","_objectSpread","width","Record","Form","onValueChange","getFormApi","ArrayField","initValue","arrayFields","addWithInitValue","vertical","align","status","Tooltip","Select","noLabel","optionList","Result","selectedKeys","setSelectedKeys","Table","className","rowKey","size","dataSource","rowSelection","selectedRowKeys","onChange","virtualized","columns","dataIndex","render","format","pagination","onRow","row","Index","model","Provider"],"sourceRoot":""}